/*using System.Collections.Generic;
using System.Linq;

public static class AtbashCipher
{
    static Dictionary<char, char> cipherMap;

    static AtbashCipher()
    {
        var abc = Enumerable.Range('a', 26).Select(c => (char)c).ToArray();

        cipherMap = abc.Zip(abc.Reverse(), (key, value) => new {key, value})
            .ToDictionary(x => x.key, x => x.value);
    }

    public static string Encode(string plainValue) =>
        string.Concat(plainValue.ToLower()
            .Where(char.IsLetterOrDigit)
            .Select(c => cipherMap.GetValueOrDefault(c, c))
            .Select((c, i) => i % 5 == 0 && i > 0 ? $" {c}" : $"{c}"));

    public static string Decode(string encodedValue) =>
        string.Concat(encodedValue.Replace(" ", "").Select(c => cipherMap.GetValueOrDefault(c, c)));
}*/